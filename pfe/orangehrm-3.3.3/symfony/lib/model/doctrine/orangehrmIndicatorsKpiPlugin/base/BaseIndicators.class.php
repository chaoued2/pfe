<?php
/**
 * Baseindicatorskpi
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property string $nom
 * @property string $type
 * @property string $type_val
 * @property string $freq
 * @property string $mode


 * @method string              getId()           Returns the current record "id" value
 * @method string              getNom()           Returns the current record "nom" value
 * @method string              getType()           Returns the current record "type" value
 * @method string              getType_val()           Returns the current record "type_val" value
 * @method string              getFreq()           Returns the current record "freq" value
 * @method string              getMode()           Returns the current record "mode" value
 *
 * @method Indicators          setId()           Sets the current record "id" value
 * @method Indicators          setNom()           Sets the current record "nom" value
 * @method Indicators          setType()            Sets the current record "type" value
 * @method Indicators          setType_val()           Sets the current record "typ_val" value
 * @method Indicators          setFreq()           Sets the current record "freq" value
 * @method Indicators          setMode()           Sets the current record "mode" value

 */


abstract class BaseIndicators extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('indicatorskpi');
        $this->hasColumn('id', 'integer', 40, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
            'length' => 40  ,
        ));
        $this->hasColumn('nom', 'string', 40, array(
            'type' => 'string',
            'default' => '',
            'notnull' => true,
            'length' => 40,
        ));
        $this->hasColumn('type', 'string', 40, array(
            'type' => 'string',
            'default' => '',
            'notnull' => true,
            'length' => 40,
        ));
        $this->hasColumn('typeval', 'string', 40, array(
            'type' => 'string',
            'default' => '',
            'notnull' => true,
            'length' => 40,
        ));
        $this->hasColumn('frequence', 'string', 40, array(
            'type' => 'string',
            'default' => '',
            'notnull' => true,
            'length' => 40,
        ));
        $this->hasColumn('actif', 'string', 40, array(
            'type' => 'string',
            'default' => '',
            'notnull' => true,
            'length' => 40,
        ));

    }
}
